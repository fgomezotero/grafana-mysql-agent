apiVersion: v1
kind: Template
metadata:
  name: monitor-grafana-mysql-pipeline
  annotations:
    description: Template de despliegue de un grafana para monitorear una Instancia MySQL
    iconClass: icon-mysql-database
    tags: grafana, mysql
    template.openshift.io/documentation-url: http://gitlab.paas.agesic.red.uy/franklin.gomez/grafana-mysql-agent.git
    template.openshift.io/long-description: Template de despliegue de un grafana para monitorear una Instancia MySQL
    template.openshift.io/provider-display-name: AGESIC
message:

parameters:
# Parámetros generales
  - name: APP_NAME
    description: Nombre de la APP que alberga todos los objetos declarados en el template
    value: grafana-mysql-agent
    required: true
# Parámetros para el acceso al GIT
  - name: GIT_URL
    description: URL del Repositorio GIT donde están los objetos necesarios para construir la aplicación
    value: http://gitlab.paas.agesic.red.uy/franklin.gomez/grafana-mysql-agent.git
    required: true
  - name: GIT_URL_USERNAME
    description: Nombre de usuario con permiso para acceder al GIT
    required: true
  - name: GIT_URL_PASSWORD
    description: Contraseña del usuario ingresado en el paso anterior
    required: true
  - name: GIT_RAMA
    description: Rama dentro del GIT
    value: master
    required: true
# Parámetros para el acceso a la instancia de MySQL donde se va a instalar la base agente.
  - name: MYSQL_HOST
    description: Para una instancia en PaaS = services, para una instancia en IaaS = IP del host donde está la base
    value: mysql
    required: true
  - name: MYSQL_PORT
    description: Puerto por donde escucha la instancia de MySQL
    value: '3306'
    required: true
  - name: MYSQL_ADMIN_PASSWORD
    description: Constraseña del usuario root de la instancia MySQL, necesario solamente para instalar la Base de datos Agente
    required: true

objects:

# ##########################################################################################
# Secrets & ConfigMaps
# ##########################################################################################
- apiVersion: v1
  kind: Secret
  metadata:
    name: git-pipeline-auth-secret
    labels:
      template: monitor-grafana-mysql-pipeline
      app: ${APP_NAME}
  stringData:
    username: ${GIT_URL_USERNAME}
    password: ${GIT_URL_PASSWORD}

- apiVersion: v1
  kind: Secret
  metadata:
    name: mysql-auth-secret
    labels:
      template: monitor-grafana-mysql-pipeline
      app: ${APP_NAME}
  stringData:
    host: ${MYSQL_HOST}
    port: ${MYSQL_PORT}
    username: root
    password: ${MYSQL_ADMIN_PASSWORD}

       
# Creación del Pipeline que ejecutará el depliegue de los componentes necesarios        
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: monitor-grafana-mysql-pipeline
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    source:
      type: Git
      git:
        uri: ${GIT_URL}
        ref: ${GIT_RAMA}
      sourceSecret:
        name: git-pipeline-auth-secret
      contextDir: pipelines
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy:
        env:
          - name: GIT_URL
            value: ${GIT_URL}
          - name: GIT_RAMA
            value: ${GIT_RAMA}
          - name: MYSQL_HOST
            value: ${MYSQL_HOST}
          - name: MYSQL_PORT
            value: ${MYSQL_PORT}
          - name: MYSQL_ADMIN_PASSWORD
            value: ${MYSQL_ADMIN_PASSWORD}
        jenkinsfilePath: jenkinsfile
  status: {}

###################################################################
# DeploymentConfig
####################################################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: mysql-client
  spec:
    replicas: 1
    selector:
      name: mysql-client
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          name: mysql-client
      spec:
        containers:
          - env:
              - name: MYSQL_USER
                value: Agent
              - name: MYSQL_PASSWORD
                value: Agent
              - name: MYSQL_ROOT_PASSWORD
                value: test
              - name: MYSQL_DATABASE
                value: Agent
            image: docker-registry.default.svc:5000/develop-pot/mysql-57-rhel7
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: mysql-client
            ports:
              - containerPort: 3306
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER
                    -D $MYSQL_DATABASE -e 'SELECT 1'
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources: {}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/lib/mysql/data
                name: mysql-client-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - emptyDir: {}
            name: mysql-client-data
    test: false
    triggers: []

###########################################################################################
# ImageStream
###########################################################################################
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: custom-grafana
    labels:
      app: grafana
  spec:
    dockerImageRepository:

###########################################################################################
# BuildConfig
###########################################################################################

- kind: BuildConfig
  metadata:
    labels:
      app: grafana
    name: custom-grafana
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: custom-grafana:latest
    resources: {}
    runPolicy: Serial
    source:
      contextDir: grafana    
      git:
        uri: ${GIT_URL}
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
        env:
          - name: HOST_DB
            valueFrom:
              secretKeyRef:
                key: host
                name: mysql-auth-secret
          - name: PORT_DB
            valueFrom:
              secretKeyRef:
                key: port
                name: mysql-auth-secret
          - name: NAME_DB
            value: my2
          - name: USERNAME_DB
            value: my2
          - name: PASSWORD_DB
            value: my2grafanareader
      type: Docker
    triggers: {}